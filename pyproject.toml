[project]
name = "marginal-child"
version = "1.0.0"
description = "Analyze how government benefits change with each additional child"
authors = [{name = "PolicyEngine", email = "hello@policyengine.org"}]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
dependencies = [
    "streamlit>=1.28.0,<2.0.0",
    "plotly>=5.17.0,<6.0.0",
    "pandas>=2.1.0,<3.0.0",
    "numpy>=2.1.0",  # PolicyEngine requires numpy 2.1+
    "policyengine-us>=1.0.0",
    # Temporary: use fixed policyengine-core from PR until merged
    "policyengine-core @ git+https://github.com/MaxGhenis/policyengine-core.git@fix-numpy2-structured-arrays",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black==23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = ["app", "calculations", "constants", "ui_components"]

[tool.black]
line-length = 79
target-version = ["py39", "py310", "py311", "py312"]

[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "setup.py",
    ".venv/*",
    "venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]